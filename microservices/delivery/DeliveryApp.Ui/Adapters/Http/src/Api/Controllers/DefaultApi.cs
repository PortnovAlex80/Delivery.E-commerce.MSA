/*
 * Swagger Delivery
 *
 * Отвечает за учет курьеров, деспетчеризацию доставкуов, доставку
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Api.Attributes;
using Api.Models;

namespace Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// Назначить заказ
        /// </summary>
        /// <remarks>Позволяет назначить заказ</remarks>
        /// <response code="200">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpPost]
        [Route("/api/v1/orders/first/assign")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> AssignOrder();

        /// <summary>
        /// Создать заказ
        /// </summary>
        /// <remarks>Позволяет создать заказ</remarks>
        /// <response code="201">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpPost]
        [Route("/api/v1/orders")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> CreateOrder();

        /// <summary>
        /// Получить все актуальные заказы
        /// </summary>
        /// <remarks>Позволяет получить все актуальные заказы</remarks>
        /// <response code="200">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpGet]
        [Route("/api/v1/orders/active")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<Order>))]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> GetActiveOrders();

        /// <summary>
        /// Получить всех курьеров
        /// </summary>
        /// <remarks>Позволяет получить всех курьеров</remarks>
        /// <response code="200">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpGet]
        [Route("/api/v1/couriers/")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<Courier>))]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> GetAllCouriers();

        /// <summary>
        /// Переместиться на 1 шаг всем курьерам
        /// </summary>
        /// <remarks>Позволяет курьерам переместиться на 1 шаг</remarks>
        /// <response code="200">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpPost]
        [Route("/api/v1/couriers/all/move")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> Move();

        /// <summary>
        /// Начать работать
        /// </summary>
        /// <remarks>Позволяет курьеру начать работать</remarks>
        /// <param name="courierId">Идентификатор курьера</param>
        /// <response code="200">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpPost]
        [Route("/api/v1/couriers/{courierId}/start-work")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> StartWork([FromRoute (Name = "courierId")][Required]Guid courierId);

        /// <summary>
        /// Закончить работать
        /// </summary>
        /// <remarks>Позволяет курьеру закончить работать</remarks>
        /// <param name="courierId">Идентификатор курьера</param>
        /// <response code="200">Успешный ответ</response>
        /// <response code="0">Ошибка</response>
        [HttpPost]
        [Route("/api/v1/couriers/{courierId}/stop-work")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 0, type: typeof(Error))]
        public abstract Task<IActionResult> StopWork([FromRoute (Name = "courierId")][Required]Guid courierId);
    }
}
